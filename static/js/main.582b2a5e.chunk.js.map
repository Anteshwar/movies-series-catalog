{"version":3,"sources":["APIKey.js","components/layout/Spinner.gif","components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/layout/Spinner.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","id","Footer","href","target","rel","setLoading","type","SearchFrom","handleChange","e","props","searchMovie","value","handleSubmit","preventDefault","fetchMovies","text","onSubmit","this","name","placeholder","onChange","Component","connect","state","movies","dispatch","payload","Axios","get","then","response","data","catch","err","console","log","MovieCard","movie","src","Poster","alt","Title","Year","imdbID","MoviesContainer","date","time","product","content","Response","Search","map","index","key","Spinner","spinner","style","width","margin","display","Landing","loading","SearchForm","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","React","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.582b2a5e.chunk.js","sourcesContent":["module.exports= {\r\n    APIKey: `aaa9ac4d`\r\n}","module.exports = __webpack_public_path__ + \"static/media/Spinner.325cad7f.gif\";","import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-light bg-dark mb-5\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-header\">\r\n            <Link className=\"navbar-brand text-white text-lg brand-text\" to=\"/\">\r\n              MovieSeriesInfo\r\n            </Link>\r\n          </div>\r\n          <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\r\n            <li className=\"nav-item d-inline-block mr-4\">\r\n              <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n            </li>\r\n            <li className=\"nav-item d-inline-block mr-4\">\r\n              <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\r\n          Developed By:\r\n          <span className=\"text-warning font-weight-normal\">\r\n            Anteshwar Tondare\r\n          </span>\r\n          , Using <i className=\"fab fa-react\" /> React Js &amp; Redux JS\r\n          integrated with external movies data API\r\n          <a href=\"http://www.omdbapi.com\" target=\"blank\" rel=\"noopener noreferrer\">\r\n            OMDB\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { SEARCH_MOVIE,FETCH_MOVIES,FETCH_MOVIE,LOADING } from \"./types\";\r\nimport Axios from \"axios\";\r\nimport {APIKey} from '../APIKey'\r\n\r\nexport const searchMovie = (text) => (dispatch) => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text,\r\n  });\r\n};\r\n\r\nexport const fetchMovies = text => dispatch =>{\r\n    Axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then(response => dispatch({\r\n        type : FETCH_MOVIES,\r\n        payload : response.data\r\n    }))\r\n    .catch(err => console.log(err))\r\n}\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n  Axios.get(`http://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n  .then(response => dispatch({\r\n      type : FETCH_MOVIE,\r\n      payload : response.data\r\n  }))\r\n  .catch(err => console.log(err))\r\n}\r\n\r\nexport const setLoading = () =>{\r\n  return {\r\n    type : LOADING\r\n}\r\n}","export const SEARCH_MOVIE = 'SEARCH_MOVIE'\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES'\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE'\r\nexport const LOADING = 'LOADING'","import React, { Component } from \"react\";\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading,\r\n} from \"../../actions/searchActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class SearchFrom extends Component {\r\n  handleChange = (e) => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"display-4 mb-3\">\r\n            <i className=\"fa fa-search\" /> Search for a Movie ,TV series ..\r\n          </h1>\r\n          <form id=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchText\"\r\n              placeholder=\" Search movies, TV series ...\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  text: state.movies.text,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading,\r\n})(SearchFrom);\r\n","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\"\r\n \r\nclass MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n       \r\n      <div className=\"col-md-3 mb-5\">\r\n        <div className=\"card card-body bg-dark text-center h-100\">\r\n          <img className=\"w-100 mb-2\" src={movie.Poster} alt=\"movie cover\" />\r\n    <h5 className=\"text-light card-title\">{movie.Title} - {MovieCard.Year}</h5>\r\n          <Link className=\"btn btn-primary\" to={'/movie/' +movie.imdbID}>\r\n            Movie Details\r\n            <i className=\"fas fa-chevron-right\" />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport MovieCard from \"./MovieCard\";\r\n\r\nclass MoviesContainer extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      date:'',\r\n      time : '',\r\n      product: ''\r\n    }\r\n  }\r\n  render() {\r\n    const { movies } = this.props;\r\n    let content = \"\";\r\n\r\n    content =\r\n    movies.Response === \"True\"\r\n        ? movies.Search.map((movie, index) => <MovieCard key={index} movie={movie} />)\r\n        : null;\r\n\r\n    return (<div className=\"row\">\r\n     {content}\r\n    </div>);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  movies: state.movies.movies,\r\n});\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n","import React from \"react\";\r\nimport spinner from \"./Spinner.gif\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\r\n        alt=\"Loading...\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport SearchForm from \"./SearchForm\";\r\nimport MoviesContainer from './MoviesContainer.js'\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nclass Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <SearchForm />\r\n        {loading ? <Spinner/> : <MoviesContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loading: state.movies.loading\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport {connect} from \"react-redux\"\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {fetchMovie,setLoading} from '../../actions/searchActions'\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nclass Movie extends Component {\r\ncomponentDidMount(){\r\n    this.props.fetchMovie(this.props.match.params.id)\r\n    this.props.setLoading()\r\n}\r\n\r\n  render() {\r\n      const {loading, movie} = this.props\r\n\r\n      let movieInfo = ( \r\n     <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4 card card-body\">\r\n            <img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n      <h2 className=\"mb-4\">{movie.Title}</h2>\r\n            <ul className=\"list-group\">\r\n              <li className=\"list-group-item\">\r\n                <strong>Genre:</strong>{movie.Genre}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Released:</strong>{movie.Released}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Rated:</strong>{movie.Rated}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>IMDB Rating:</strong>{movie.imdbRating}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Director:</strong>{movie.Director}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Writer:</strong>{movie.Writer}\r\n              </li>\r\n              <li className=\"list-group-item\">\r\n                <strong>Actors:</strong>{movie.Actors}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"card card-body bg-dark my-5 text-light\">\r\n            <div className=\"col-md-12\">\r\n              <h3>About</h3>\r\n              {movie.Plot}\r\n              <hr />\r\n              <a\r\n                href={`https://www.imdb.com/title/` + movie.imdbID}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"btn btn-primary\"\r\n              >\r\n                View on IMDB\r\n              </a>\r\n              <Link to='/' className=\"btn btn-default text-light\">\r\n                {\" \"}\r\n                Go back to Search\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>)\r\n\r\n      let content = loading ? <Spinner /> : movieInfo\r\n    return (\r\n    <div>{content}</div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state =>({\r\n    loading :state.movies.loading,\r\n    movie : state.movies.movie\r\n})\r\n\r\nexport default connect(mapStateToProps, {fetchMovie, setLoading})(Movie);\r\n","import {\r\n  SEARCH_MOVIE,\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  LOADING,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  text: \"\",\r\n  movies: [],\r\n  loading: false,\r\n  movie: [],\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false,\r\n      };\r\n    case FETCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        loading: false,\r\n      };\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from \"redux\"\r\nimport searchReducer from \"./searchReducer\"\r\n\r\nexport default combineReducers({\r\n    movies : searchReducer\r\n})","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport Landing from \"./components/home/Landing\";\nimport Movie from \"./components/home/Movie\";\n\nimport store from \"./store\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div>\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/movie/:id\" component={Movie} />\n            <Footer />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}